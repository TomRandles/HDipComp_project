@page

@model TRHDipComp_Project.Areas.ProgrammePages.Pages.ListProgrammeModulesModel
@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "List Programme Modules";
}

<br />
<br />
<div class="container">
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-8">
            <h2 class="text-center">Programmes, Modules & Assessments</h2>
        </div>
        <div class="col-md-2"></div>
    </div>
</div>
<br />
<br />

<div class="container">
    <form class="form-horizontal">
        <br />
        <div class="row">
            <br />
            <div class="col-md-3"></div>
            <div class="form-group col-md-5">
                <label class="control-label font-weight-bold">Programme name (whole or part):</label>
                <div>
                    <input type="text" asp-for="ProgrammeSearchString" class="form-control" />
                    <span asp-validation-for=ProgrammeSearchString></span>
                </div>
            </div>
            <div class="col-md-4"></div>
        </div>
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6">
                <input type="submit" value="Search" />
            </div>
            <div class="col-md-3"></div>
        </div>
        <br />
    </form>
</div>

<br />


@{

    if ((Model.ProgrammesFound != null) && (Model.ProgrammesFound.Count) != 0)
    {
        <div class="container">
            <table class="table table-sm table-bordered table-hover table-condensed table-functions-grad">
                <thead>
                    <tr>
                        <th>Programme name</th>
                        <th>Module name</th>
                        <th>Assessment name</th>
                        <th>Assessment type</th>
                        <th>Assessment maximum marks</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var prog in Model.ProgrammesFound)
                        {
                            if ((Model.ModulesInProgramme != null) && (Model.ModulesInProgramme.Count) != 0)
                            {
                                if (Model.ModulesInProgramme.ContainsValue(prog.ProgrammeID))
                                {
                                    var modsInCurrentProg = Model.ProgrammeModuleList.Where(s => s.ProgrammeID == prog.ProgrammeID)
                                    .Select(s => s.ModuleID);
                                    foreach (var modID in modsInCurrentProg)
                                    {

                                        var mods = Model.ModuleList.Where(s => s.ModuleID == @modID)
                                        .Select(s => s);

                                        foreach (var mod in mods)
                                        {
                                            if (Model.ModulesInProgramme.ContainsKey(prog.ProgrammeID + mod.ModuleID))
                                            {
                                                if ((Model.AssessmentList != null) && (Model.AssessmentList.Count() != 0))
                                                {
                                                    Model.AssessmentsPerModule = Model.AssessmentList.Where(
                                                    a => a.ModuleID == @mod.ModuleID)
                                                    .Select(a => a).ToList();
                                                }
                                                if ((Model.AssessmentsPerModule != null) && (Model.AssessmentsPerModule.Count() != 0))
                                                {
                                                    foreach (var assess in Model.AssessmentsPerModule)
                                                    {
                                                        <tr>
                                                            <td>@prog.ProgrammeName</td>
                                                            <td><a asp-page="/ShowModuleDetails" asp-area="ModulePages" asp-route-id="@mod.ModuleID">@mod.ModuleName</a></td>
                                                            <td><a asp-page="/ShowAssessmentDetails" asp-area="AssessmentPages" asp-route-id="@assess.AssessmentID">@assess.AssessmentName</a></td>
                                                            <td>@assess.AssessmentType</td>
                                                            <td class="text-center">@assess.AssessmentTotalMark </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td>@prog.ProgrammeName</td>
                                                        <td><a asp-page="/ShowModuleDetails" asp-area="ModulePages" asp-route-id="@mod.ModuleID">@mod.ModuleName</a></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <h5>No programmes were found which match: <strong><quote>@Model.ProgrammeSearchString</quote></strong></h5>
    }
}
<br />
<br />

<a asp-page="/Index">Home</a>
