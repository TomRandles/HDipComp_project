// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRHDipComp_Project.Models;

namespace TRHDipComp_Project.Migrations
{
    [DbContext(typeof(CollegeDbContext))]
    partial class CollegeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TRHDipComp_Project.Models.Assessment", b =>
                {
                    b.Property<string>("AssessmentID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6);

                    b.Property<string>("AssessmentDescription")
                        .HasMaxLength(50);

                    b.Property<string>("AssessmentName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("AssessmentTotalMark");

                    b.Property<int>("AssessmentType");

                    b.Property<DateTime>("LastUpdated");

                    b.Property<string>("ModuleID")
                        .HasMaxLength(6);

                    b.HasKey("AssessmentID");

                    b.HasIndex("ModuleID");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.AssessmentResult", b =>
                {
                    b.Property<string>("AssessmentResultID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6);

                    b.Property<string>("AssessmentID")
                        .HasMaxLength(6);

                    b.Property<string>("AssessmentResultDescription")
                        .HasMaxLength(50);

                    b.Property<int>("AssessmentResultMark");

                    b.Property<string>("ModuleID")
                        .HasMaxLength(6);

                    b.Property<string>("ProgrammeID")
                        .HasMaxLength(6);

                    b.Property<string>("StudentID")
                        .HasMaxLength(7);

                    b.HasKey("AssessmentResultID");

                    b.HasIndex("AssessmentID");

                    b.HasIndex("StudentID");

                    b.HasIndex("ProgrammeID", "ModuleID");

                    b.ToTable("AssessmentResults");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.Module", b =>
                {
                    b.Property<string>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6);

                    b.Property<DateTime>("LastUpdated");

                    b.Property<int>("ModuleCredits");

                    b.Property<string>("ModuleDescription")
                        .HasMaxLength(50);

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ModuleID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.Programme", b =>
                {
                    b.Property<string>("ProgrammeID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6);

                    b.Property<DateTime>("LastUpdated");

                    b.Property<decimal>("ProgrammeCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProgrammeCredits");

                    b.Property<string>("ProgrammeDescription")
                        .HasMaxLength(50);

                    b.Property<string>("ProgrammeName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("ProgrammeQQILevel");

                    b.HasKey("ProgrammeID");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.ProgrammeModule", b =>
                {
                    b.Property<string>("ProgrammeID");

                    b.Property<string>("ModuleID");

                    b.Property<DateTime>("LastUpdated");

                    b.HasKey("ProgrammeID", "ModuleID");

                    b.HasIndex("ModuleID");

                    b.ToTable("ProgrammeModules");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.Student", b =>
                {
                    b.Property<string>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7);

                    b.Property<string>("AddressOne")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("AddressTwo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("EmergencyMobilePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("FullOrPartTime");

                    b.Property<int>("GenderType");

                    b.Property<DateTime>("LastUpdated");

                    b.Property<string>("MobilePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<decimal>("ProgrammeFeePaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProgrammeID")
                        .HasMaxLength(6);

                    b.Property<string>("StudentPPS")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("StudentID");

                    b.HasIndex("ProgrammeID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.Assessment", b =>
                {
                    b.HasOne("TRHDipComp_Project.Models.Module")
                        .WithMany("Assessments")
                        .HasForeignKey("ModuleID");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.AssessmentResult", b =>
                {
                    b.HasOne("TRHDipComp_Project.Models.Assessment")
                        .WithMany("AssessmentResults")
                        .HasForeignKey("AssessmentID");

                    b.HasOne("TRHDipComp_Project.Models.Student")
                        .WithMany("AssessmentResults")
                        .HasForeignKey("StudentID");

                    b.HasOne("TRHDipComp_Project.Models.ProgrammeModule")
                        .WithMany("AssessmentResults")
                        .HasForeignKey("ProgrammeID", "ModuleID");
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.ProgrammeModule", b =>
                {
                    b.HasOne("TRHDipComp_Project.Models.Module")
                        .WithMany("ProgrammeModules")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TRHDipComp_Project.Models.Programme")
                        .WithMany("ProgrammeModules")
                        .HasForeignKey("ProgrammeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TRHDipComp_Project.Models.Student", b =>
                {
                    b.HasOne("TRHDipComp_Project.Models.Programme")
                        .WithMany("Students")
                        .HasForeignKey("ProgrammeID");
                });
#pragma warning restore 612, 618
        }
    }
}
